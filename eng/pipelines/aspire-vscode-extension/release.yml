trigger: none # We only want to trigger manually or based on resources
pr: none

parameters:
- name: DryRun
  displayName: Dry run only?
  type: boolean
  default: false

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
  pipelines:
  - pipeline: CI
    source: dotnet-aspire-vscode-extension
    trigger:
      branches:
      - release/vscode
      - prerelease/vscode

# Consume variable groups at top-level so all approvals are done at once.
variables:
- template: GlobalVariables.yml

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
    stages:
    - stage: marketplace
      displayName: Marketplace
      jobs:
      - job: release
        displayName: Publish
        pool:
          name: AzurePipelines-EO
          image: 1ESPT-Ubuntu20.04
          os: Linux
        steps:
        - checkout: none
        - task: NodeTool@0
          displayName: üîß Use Node.js 22s
          inputs:
            versionSpec: '22.x'
        - pwsh: npm i -g @vscode/vsce
          displayName: ‚öôÔ∏è Install vsce
        - powershell: |
            $contentType = 'application/json';
            $headers = @{ Authorization = 'Bearer $(System.AccessToken)' };
            $rawRequest = @{ daysValid = 365 * 2; definitionId = $(resources.pipeline.CI.pipelineID); ownerId = 'User:$(Build.RequestedForId)'; protectPipeline = $false; runId = $(resources.pipeline.CI.runId) };
            $request = ConvertTo-Json @($rawRequest);
            Write-Host $request
            $uri = "$(System.CollectionUri)$(System.TeamProject)/_apis/build/retention/leases?api-version=6.0-preview.1";
            Invoke-RestMethod -uri $uri -method POST -Headers $headers -ContentType $contentType -Body $request;
          displayName: üóª Retain build
        - download: CI
          artifact: package
          displayName: üîª Download package artifact
        - task: AzureCLI@2
          displayName: 'üì¶ Publish to Marketplace'
          inputs:
            azureSubscription: 'AspireVSCodeExtensionServiceConnectionWithManagedIdentity'
            scriptType: pscore
            scriptLocation: inlineScript
            workingDirectory: '$(Pipeline.Workspace)/CI/package'
            inlineScript: |
              Write-Host "=== Directory Contents ==="
              Get-ChildItem | Format-Table -AutoSize

              Write-Host "=== VSIX Files Found ==="
              Get-ChildItem *.vsix | ForEach-Object {
                Write-Host "  $($_.Name) - $([math]::Round($_.Length/1MB, 2)) MB"
              }

              $basePublishArgs = ,'publish'
              $basePublishArgs += '--azure-credential'

              $ShippingBranch = '$(resources.pipeline.CI.sourceBranch)'
              Write-Host "Shipping branch: $ShippingBranch"
              if ($ShippingBranch -ne 'refs/heads/release') {
                $basePublishArgs += '--pre-release'
              }
              $basePublishArgs += '--packagePath'
              $publishArgs = $basePublishArgs + (Get-ChildItem *.vsix | Sort-Object Name -Descending |% { $_.Name })
              if ('${{ parameters.DryRun }}' -eq 'true') {
                Write-Host "##[command]vsce $publishArgs"
                Write-Host "##vso[task.logissue type=warning]Marketplace publish skipped for dry run."
                exit 0
              }

              Write-Host "##[command]vsce $publishArgs"
              vsce @publishArgs
