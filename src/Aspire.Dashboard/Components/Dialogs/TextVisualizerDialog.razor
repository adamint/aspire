@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Resources

@inject IStringLocalizer<Dialogs> Loc
@implements IDialogContentComponent<Aspire.Dashboard.Model.TextVisualizerDialogViewModel>

<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.SlideSearch())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Content.Description
        </FluentLabel>

        <FluentButton id="@_openSelectFormatButtonId" slot="end"
                      Style="margin-left: auto"
                      Appearance="@(_selectedOption == PlaintextFormat ? Appearance.Stealth : Appearance.Accent)"
                      IconEnd="@(new Icons.Regular.Size24.SlideTextEdit())"
                      @onclick="() => _isSelectFormatPopupOpen = !_isSelectFormatPopupOpen"
                      Title="@Loc[nameof(Dialogs.TextVisualizerSelectFormatType)]"
                      aria-label="@Loc[nameof(Dialogs.TextVisualizerSelectFormatType)]"/>

        <FluentPopover AnchorId="@_openSelectFormatButtonId"
                       @bind-Open="@_isSelectFormatPopupOpen"
                       AutoFocus="true">
            <Body>
                <FluentRadioGroup aria-labelledby="@_openSelectFormatButtonId"
                                  @bind-Value="_selectedOption"
                                  @bind-Value:after="@OnFormatOptionChanged"
                                  Orientation="Orientation.Vertical">
                    @foreach (var option in _options)
                    {
                        <FluentRadio Disabled="@(!_enabledOptions.Contains(option.Id))" Value="@option.Id">@option.Name</FluentRadio>
                    }
                </FluentRadioGroup>
            </Body>
        </FluentPopover>
    </FluentStack>
</FluentDialogHeader>

<FluentDialogBody>
    <div class="log-overflow">
        <div class="log-container">
            <Virtualize Items="@GetLines()" ItemSize="20" OverscanCount="100" TItem="ResourceLogLine">
                <div class="log-line-row-container">
                    <div class="log-line-row">
                    <span class="log-line-area">
                        <span class="log-line-number text-visualizer-line-number">@context.LineNumber</span>
                        <span class="log-content">
                            @((MarkupString)(context.Content ?? string.Empty))
                        </span>
                    </span>
                    </div>
                </div>
            </Virtualize>
        </div>
    </div>
</FluentDialogBody>

<FluentDialogFooter Visible="false" />

@code {
    [Parameter, EditorRequired]
    public required TextVisualizerDialogViewModel Content { get; set; }
}
