@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Extensions
@using Aspire.Dashboard.Resources
@inject IStringLocalizer<Columns> Loc

@if (Resource is ProjectViewModel projectViewModel)
{
    // NOTE projects are also executables, so we have to check for projects first
    <GridValue Value="@Path.GetFileName(projectViewModel.ProjectPath)"
               ValueToCopy="@projectViewModel.ProjectPath"
               EnableHighlighting="false"
               PreCopyToolTip="@Loc[Columns.SourceColumnSourceCopyFullPathToClipboard]"
               ToolTip="@projectViewModel.ProjectPath"/>
}
else if (Resource is ExecutableViewModel executableViewModel)
{
    var arguments = string.Join(" ", executableViewModel.Arguments ?? []);
    var fullCommandLine = $"{Path.GetFileName(executableViewModel.ExecutablePath)} {arguments}";

    <GridValue Value="@fullCommandLine"
               ValueToCopy="@executableViewModel.ExecutablePath"
               EnableHighlighting="false"
               PreCopyToolTip="@Loc[Columns.SourceColumnSourceCopyFullPathToClipboard]"
               ToolTip="@executableViewModel.ExecutablePath"/>

    <div class="ellipsis-overflow" title="@executableViewModel.WorkingDirectory" aria-label="@executableViewModel.WorkingDirectory">@string.Format(Loc[Columns.SourceColumnDisplayWorkingDirectory], executableViewModel.WorkingDirectory?.TrimMiddle(35))</div>
}
else if (Resource is ContainerViewModel containerViewModel)
{
    var ports = string.Join("; ", containerViewModel.Ports);
    <FluentStack Orientation="Orientation.Horizontal">
        <span title="@containerViewModel.Image"><FluentHighlighter HighlightedText="@FilterText" Text="@containerViewModel.Image" /></span>
        @if (containerViewModel.Ports.Length > 0)
        {
            var title = string.Format(
                Loc[containerViewModel.Ports.Length == 1
                    ? Columns.SourceColumnDisplayPort
                    : Columns.SourceColumnDisplayPorts],
                ports);
            <span class="subtext" title="@title" aria-label="@title">@ports</span>
        }
    </FluentStack>
    <FluentStack Orientation="Orientation.Horizontal">
        @if (containerViewModel.Command is not null)
        {
            <div class="ellipsis-overflow" title="@Loc[Columns.SourceColumnDisplayContainerCommandTitle]" aria-label="@Loc[Columns.SourceColumnDisplayContainerCommandTitle]">@Loc[Columns.SourceColumnDisplayContainerCommand, containerViewModel.Command]</div>
        }
        @if (containerViewModel.Args is not null)
        {
            var args = string.Join(" ", containerViewModel.Args);
            <div class="ellipsis-overflow" title="@Loc[Columns.SourceColumnDisplayContainerArgsTitle]" aria-label="@Loc[Columns.SourceColumnDisplayContainerArgsTitle]">@args</div>
        }
    </FluentStack>
}

@code {
    [Parameter, EditorRequired]
    public required ResourceViewModel Resource { get; set; }

    [Parameter, EditorRequired]
    public required string FilterText { get; set; }
}
