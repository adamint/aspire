@using Aspire.Dashboard.Components.CustomIcons
@using Aspire.Dashboard.Resources
@inject IStringLocalizer<Dialogs> DialogsLoc
@inject IStringLocalizer<Layout> LayoutLoc
@inject NavigationManager NavigationManager

@{
    var navMenu = new List<NavMenuItemEntry>
    {
        new(
            LayoutLoc[nameof(Layout.MainLayoutAspireRepoLink)],
            () =>
            {
                NavigationManager.NavigateTo("https://aka.ms/dotnet/aspire/repo");
                return Task.CompletedTask;
            },
            new AspireIcons.Size24.GitHub()
        ),
        new(
            LayoutLoc[nameof(Layout.MainLayoutAspireDashboardHelpLink)],
            LaunchHelpAsync,
            new Icons.Regular.Size24.QuestionCircle()
        ),
        new(
            LayoutLoc[nameof(Layout.MainLayoutLaunchSettings)],
            LaunchSettingsAsync,
            new Icons.Regular.Size24.Settings()
        ),
    };
}

<FluentButton
    Id="@HamburgerId"
    IconEnd="@(_isOpen ? new Icons.Regular.Size24.Dismiss() : new Icons.Regular.Size24.Navigation())"
    Title="@(DialogsLoc[nameof(Dialogs.HelpDialogCategoryNavigation)])"
    Appearance="Appearance.Stealth"
    BackgroundColor="transparent"
    OnClick="@(() => _isOpen = !_isOpen)"
    Class="navigation-button"/>

<FluentMenu Anchor="@HamburgerId" @bind-Open="@_isOpen" Style="grid-column: 1; grid-row: 0">
   @foreach (var item in navMenu)
   {
       <FluentMenuItem OnClick="@item.OnClick">
           @item.Text

           @if (item.Icon is { } icon)
           {
               <span slot="start" >
                   <FluentIcon Value="@icon" Slot="start" Color="Color.Neutral" />
               </span>
           }
       </FluentMenuItem>
   }
</FluentMenu>

<FluentAnchoredRegion Anchor="@HamburgerId"
                      FixedPlacement="true"
                      VerticalPositioningMode="AxisPositioningMode.Dynamic"
                      VerticalScaling="AxisScalingMode.Anchor"
                      HorizontalPositioningMode="AxisPositioningMode.Dynamic"
                      HorizontalScaling="AxisScalingMode.Anchor"
                      HorizontalInset="true">
    <div style="height: 100%; width: 100%; background: var(--highlight-bg);">inside</div>
</FluentAnchoredRegion>

@code {
    private const string HamburgerId = "nav-menu-button";
    private bool _isOpen = false;

    [Parameter] public required Func<Task> LaunchHelpAsync { get; set; }
    [Parameter] public required Func<Task> LaunchSettingsAsync { get; set; }
}
