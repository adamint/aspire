@using Aspire.Dashboard.Components.CustomIcons;
@using Aspire.Dashboard.Resources

@inject IStringLocalizer<Layout> Loc

<div class="layout">
    <div class="aspire-icon">
        <FluentButton IconEnd="@(new Icons.Regular.Size24.Navigation())"
                      Title="Navigation"
                      Appearance="Appearance.Stealth"
                      BackgroundColor="transparent"
                      Class="navigation-button"/>

        <FluentAnchor Appearance="Appearance.Stealth" Href="/" Class="logo"
                      title="@Loc[nameof(Layout.MainLayoutAspire)]"
                      aria-label="@Loc[nameof(Layout.MainLayoutAspire)]">
            <FluentIcon Value="@(new AspireIcons.Size24.Logo())"/>
        </FluentAnchor>
    </div>

    <FluentHeader>
        <FluentAnchor Appearance="Appearance.Stealth" Href="/" Class="logo">
            <ApplicationName />
        </FluentAnchor>
        <div class="flex-filler"></div>
        <FluentAnchor Appearance="Appearance.Stealth"
                      Href="https://aka.ms/dotnet/aspire/repo" Target="_blank" Rel="noreferrer noopener"
                      Title="@Loc[nameof(Layout.MainLayoutAspireRepoLink)]" aria-label="@Loc[nameof(Layout.MainLayoutAspireRepoLink)]">
            <FluentIcon Value="@(new AspireIcons.Size24.GitHub())" Color="Color.Neutral" />
        </FluentAnchor>
        <FluentButton Appearance="Appearance.Stealth" OnClick="@LaunchHelpAsync" Target="_blank" Rel="noreferrer noopener"
                      Title="@Loc[nameof(Layout.MainLayoutAspireDashboardHelpLink)]" aria-label="@Loc[nameof(Layout.MainLayoutAspireDashboardHelpLink)]">
            <FluentIcon Value="@(new Icons.Regular.Size24.QuestionCircle())" Color="Color.Neutral" />
        </FluentButton>
        <FluentButton Appearance="Appearance.Stealth" OnClick="@LaunchSettingsAsync"
                      Title="@Loc[nameof(Layout.MainLayoutLaunchSettings)]" aria-label="@Loc[nameof(Layout.MainLayoutLaunchSettings)]">
            <FluentIcon Value="@(new Icons.Regular.Size24.Settings())" Color="Color.Neutral" />
        </FluentButton>
        <UserProfile />
    </FluentHeader>

    <div class="messagebar-container">
        <FluentMessageBarProvider Section="@MessageBarSection" Class="top-messagebar" />
    </div>
    <FluentBodyContent Class="custom-body-content">
        <FluentToastProvider />
        @LayoutBody
    </FluentBodyContent>

    <FluentDialogProvider />
    <FluentTooltipProvider />
    <div id="blazor-error-ui">
        @Loc[nameof(Layout.MainLayoutUnhandledErrorMessage)]
        <a href="" class="reload">@Loc[nameof(Layout.MainLayoutUnhandledErrorReload)]</a>
        <a class="dismiss">🗙</a>
    </div>
</div>

@code {
[Parameter] public RenderFragment? LayoutBody { get; set; }
[Parameter] public required Func<Task> LaunchHelpAsync { get; set; }
[Parameter] public required Func<Task> LaunchSettingsAsync { get; set; }
[Parameter] public required string MessageBarSection { get; set; }
}
