@using Aspire.Dashboard.Components.Pages
@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Utils

@inject IStringLocalizer<Dashboard.Resources.Metrics> Loc

<div>
    <div class="metrics-content">
        @if (PageViewModel.SelectedApplication.Id?.InstanceId != null && PageViewModel.SelectedMeter != null && PageViewModel.SelectedInstrument != null)
        {
            <ChartContainer
                ApplicationKey="@(PageViewModel.SelectedApplication.Id.GetApplicationKey())"                                            MeterName="@(PageViewModel.SelectedMeter.MeterName)"
                InstrumentName="@(PageViewModel.SelectedInstrument.Name)"
                Duration="PageViewModel.SelectedDuration.Id"
                ActiveView="@(PageViewModel.SelectedViewKind ?? Metrics.MetricViewKind.Graph)"
                OnViewChangedAsync="@OnViewChangedAsync"
                Applications="@Applications" />
        }
        else if (PageViewModel.SelectedMeter != null)
        {
            <h3>@PageViewModel.SelectedMeter.MeterName</h3>
            <FluentDataGrid Style="max-width:1100px;" Items="@PageViewModel.Instruments!.Where(i => i.Parent == PageViewModel.SelectedMeter).OrderBy(i => i.Name).AsQueryable()" GridTemplateColumns="3fr 5fr" TGridItem="OtlpInstrument">
                <ChildContent>
                    <TemplateColumn Title="@Loc[nameof(Dashboard.Resources.Metrics.MetricsInsturementNameGridNameColumnHeader)]">
                        <FluentAnchor Href="@DashboardUrls.MetricsUrl(resource: PageViewModel.SelectedApplication.Name, meter: context.Parent.MeterName, instrument: context.Name)" Appearance="Appearance.Lightweight">
                            @context.Name
                        </FluentAnchor>
                    </TemplateColumn>
                    <PropertyColumn Title="@Loc[nameof(Dashboard.Resources.Metrics.MetricsInsturementDescriptionGridNameColumnHeader)]" Property="@(c => c.Description)" Class="multiline-text"/>
                </ChildContent>
            </FluentDataGrid>
        }
        else
        {
            <p>@Loc[nameof(Dashboard.Resources.Metrics.MetricsSelectInstrument)]</p>
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public required Metrics.MetricsViewModel PageViewModel { get; set; }

    [Parameter, EditorRequired]
    public required Func<Metrics.MetricViewKind, Task> OnViewChangedAsync { get; set; }

    [Parameter, EditorRequired]
    public required List<OtlpApplication> Applications { get; set; }
}
